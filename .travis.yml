language: node_js

node_js:
  - "10"

cache:
  yarn: true
  directories:
    - $HOME/.cache/bower
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

before_install:
  # https://docs.travis-ci.com/user/languages/javascript-with-nodejs#Travis-CI-supports-yarn
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.12.3
  - export PATH="$HOME/.yarn/bin:$PATH"
  - export GITHUB_TOKEN="af6b2ce1e4aa22d3bed184ae02a3b937db945271"
  - export DO_ACCESS_TOKEN="47c9e8e892b07f93ebeb35e92dc8bd24ae24dc8e3599f182a6d9d693a474f84f"
  - export SB_IMAGE="hub.docker.com/vo0doo/shadowbox"
  - export SENTRY_API_URL="https://1fd65d43f1b34a108c3e429435a1ed4d@sentry.io/1413841"
  - export WATCHTOWER_REFRESH_SECONDS=600

stages:
  - name: tag
    if: type = cron
  - name: build and unit test
    if: type != cron
  - name: integration test
    if: type != cron
  - name: deploy
    if: tag =~ ^daily
  - name: release
    if: tag =~ ^v[0-9]

# Этапы с одинаковым именем определяют несколько заданий, которые выполняются параллельно.
# Чтобы было понятнее в пользовательском интерфейсе Travis, что конкретно представляет собой каждая работа
# делая, мы добавляем описательную переменную среды.
jobs:
  include:
    - stage: tag
      script:
        - RELEASE_NAME=daily-$(date -I)
        - curl --data '{"tag_name":"'$RELEASE_NAME'","name":"'$RELEASE_NAME'","prerelease":true}' https://api.github.com/repos/Jigsaw-Code/outline-server/releases?access_token=$CI_USER_TOKEN

    # В идеале мы бы как-то разбили эту стадию, например, по компонентам или
    # команды build / test, чтобы было понятнее в интерфейсе Travis, какие именно
    # Команда не выполнена. Тем не менее, так как каждый этап требует значительного запуска
    # стоимость, мы объединяем команды тестирования и сборки для всех компонентов в один быстрый
    # этап.
    - stage: build and unit test
      script:
        - yarn do metrics_server/build
        - yarn do sentry_webhook/build
        - yarn do shadowbox/server/build
        - yarn do shadowbox/test
        - yarn do server_manager/electron_app/build
        - yarn do server_manager/electron_app/test
        - yarn do server_manager/web_app/build
        - yarn do server_manager/web_app/test

    - stage: integration test
      sudo: required
      services: docker
      script:
        # https://docs.travis-ci.com/user/docker/
        - |
          sudo rm -f /usr/local/bin/docker-compose
          curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-$(uname -s)-$(uname -m) > docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin
        - yarn do shadowbox/integration_test/run

    - stage: deploy
      env:
        - DESC=shadowbox docker image
      sudo: required
      services: docker
      script:
        - yarn do shadowbox/docker/build
        - docker login hub.docker.com -u="$DOCKER_HUB_USERNAME" -p="$HUB_DOCKER_PASSWORD"
        - docker tag vo0doo/shadowbox hub.docker.com/vo0doo/shadowbox:$TRAVIS_TAG
        - docker push hub.docker.com/vo0doo/shadowbox:$TRAVIS_TAG
        - docker tag vo0doo/shadowbox hub.docker.com/vo0doo/shadowbox:daily
        - docker push hub.docker.com/vo0doo/shadowbox:daily
        # quay.io/outline/shadowbox:daily

    - stage: deploy
      env:
        - DESC=linux manager
      addons:
        apt:
          packages:
          - rpm
      script: yarn do server_manager/electron_app/package_linux

    # https://www.electron.build/multi-platform-build
    - stage: deploy
      env:
        - DESC=windows manager
      sudo: required
      services: docker
      script:
        - yarn do server_manager/electron_app/build
        - docker pull electronuserland/builder:wine
        - docker run --rm
            -v ${PWD}:/project
            -v ~/.cache/electron:/root/.cache/electron
            -v ~/.cache/electron-builder:/root/.cache/electron-builder
            electronuserland/builder:wine
            /bin/bash -c "yarn do server_manager/electron_app/package_only_windows" || travis_terminate $?

    - stage: deploy
      env:
        - DESC=macos manager
      os: osx
      script: yarn do server_manager/electron_app/package_macos

    # Note that because we cannot currently sign Windows binaries on Travis,
    # these must be manually built and uploaded to the releases page.
    - stage: release
      env:
        - DESC=linux manager
      addons:
        apt:
          packages:
          - rpm
      script: yarn do server_manager/electron_app/release_linux

    - stage: release
      os: osx
      env:
        - DESC=macos manager
      script:
        - openssl aes-256-cbc -K $encrypted_61a49da75942_key -iv $encrypted_61a49da75942_iv -in macos-signing-certificate.p12.enc -out macos-signing-certificate.p12 -d
        - export CSC_LINK=$(pwd)/macos-signing-certificate.p12
        # Необходимо снова запустить пряжу из-за изменения ОС, необходимого для работы подписи.
        - yarn && yarn do server_manager/electron_app/release_macos

deploy:
  provider: releases
  api_key:
    secure: "0uQ8HgYBpzeXG+m/q6FUrcvQe+30YkbuGej/nT4mAj9VhX7Ft/5PdsB6lFiUjc/OnNLbaMdIHJj2MO5SDy55A4d5gC/LN4hcvwWKY+sRephyMnu3f0Nepy1bZbA1rud4MToSv7K3aD24f7AWNNiwz8f/CdvENt6fDu53GuPZLPUDR6TzMy1JBZ3jyLDpy7Cjue24B9XUaXWzBpwFD1TpeKJ37O5V655+VWWPuYWUY2or0N6Iohunhrp1IhQAM7Cw4zln94prXmdX9bux8OP6U73gnyvTf7eGG4SjzypqqCL7VzqzUmDqYm072t2jvTwtjWjUt0vTE4UfOituDBK8VXqIpa4GGk3HBbx40GEQxVXJNCJl48cZsmEPZB+w4mPgxO9EWA/SpBNloqJuvfbspczYgvrM1/p5169PcXScVF+6iV+EWUeMKrymXOmJ4LpjttCDCTg/3AfwHCbAD+4JuLLMETfWeeZQ/4w3HBwxRRUFyvryLHmshuCahJxICWeJMtxftkA3O8e9Kc6P6x/G0JKDrSLeNJcY4vyKwpe4R9uJWk0A5lAnklFKgSXNT394/TNXpuTXuarZD6VaJcx9ieBQNkzpmi9RoLTjdnigmYeTWdPFrhOP/0fJu05U3nyH0NpKscG0e3+kG0XTJOHhYSwp/UknZb4rfR+BmqSTGik="
  file_glob: true
  file: "build/server_manager/electron_app/static/dist/*.*"
  skip_cleanup: true
  on:
    tags: true

env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
